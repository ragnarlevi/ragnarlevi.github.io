<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blockchain on Ragnar</title><link>https://ragnarlevi.github.io/tags/blockchain/</link><description>Recent content in blockchain on Ragnar</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ragnarlevi.github.io/tags/blockchain/index.xml" rel="self" type="application/rss+xml"/><item><title>Proof-of-Work and Proof-of-Stake</title><link>https://ragnarlevi.github.io/post/blockchain/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://ragnarlevi.github.io/post/blockchain/</guid><description>The purpose of this notebook is to look at proof of work blockchain and proof of stake blockchain in a very primitive manner.
We start with defining transactions and block objects for the PoW and PoS
from dataclasses import dataclass import json from hashlib import sha256 from datetime import datetime from dataclasses import asdict import numpy as np import time @dataclass class Transaction: sender: str receiver: str amount: float @dataclass class Pow_Block: version: int timestamp: float nonce: int difficulty: int previous_hash: str transactions: list[Transaction] @dataclass class Pos_Block: version: int timestamp: float validator: str previous_hash: str transactions: list[Transaction] Proof of Work In proof of work, miners are competing in finding the so called nonce (number only used once) that satisfies a certain difficulty.</description></item></channel></rss>